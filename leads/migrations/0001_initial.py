# Generated by Django 4.2.5 on 2025-01-25 13:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import leads.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_organisor", models.BooleanField(default=False)),
                ("is_agent", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commission_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "total_profit",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("level", models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("length", models.IntegerField()),
                ("breadth", models.IntegerField()),
                ("area", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Balance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "carryover_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bill_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("buyer_name", models.CharField(max_length=255)),
                (
                    "buyer_number",
                    models.TextField(blank=True, max_length=10, null=True),
                ),
                ("buyer_address", models.TextField()),
                ("buyer_pan_number", models.CharField(max_length=10)),
                ("invoice_date", models.DateField()),
                ("due_date", models.DateField()),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "other_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("buyer_state", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Daybook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "activity",
                    models.CharField(
                        choices=[
                            ("pantry", "Pantry"),
                            ("fuel", "Fuel"),
                            ("office_expense", "Office Expense"),
                            ("site_development", "Site Development"),
                            ("site_visit", "Site Visit"),
                            ("printing", "Printing"),
                            ("utility", "Utility"),
                            ("others", "Others"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "custom_activity",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("remark", models.TextField(blank=True, null=True)),
                (
                    "current_balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=15),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmiPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("interest_rate", models.DecimalField(decimal_places=2, max_digits=5)),
                ("tenure_months", models.IntegerField()),
                (
                    "minimum_downpayment",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Kisan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("contact_number", models.IntegerField()),
                ("address", models.TextField(max_length=50)),
                ("is_assigned", models.BooleanField(default=False)),
                ("khasra_number", models.IntegerField(unique=True)),
                (
                    "area_in_beegha",
                    models.DecimalField(decimal_places=3, max_digits=20),
                ),
                ("land_costing", models.DecimalField(decimal_places=3, max_digits=12)),
                (
                    "development_costing",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "kisan_payment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "land_address",
                    models.TextField(blank=True, max_length=50, null=True),
                ),
                (
                    "payment_to_kisan",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "basic_sales_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("is_sold", models.BooleanField(default=False)),
                ("usable_land_total", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.CharField(max_length=222)),
                ("interest", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("Qty", models.IntegerField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_name", models.CharField(max_length=255)),
                ("block", models.CharField(max_length=2)),
                (
                    "dev_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("title", models.CharField(max_length=255, unique=True)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "total_land_available_fr_plotting",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "total_development_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "kisans",
                    models.ManyToManyField(
                        related_name="projects_kisan", to="leads.kisan"
                    ),
                ),
                (
                    "lands",
                    models.ManyToManyField(
                        related_name="projects_lands", to="leads.kisan"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Promoter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("mobile_number", models.CharField(max_length=15)),
                ("address", models.TextField()),
                ("pan_no", models.CharField(max_length=15)),
                ("id_card_number", models.CharField(max_length=20)),
                (
                    "joining_percentage",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "totalprice",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("area", models.IntegerField(blank=True, null=True)),
                ("length", models.IntegerField(blank=True, null=True)),
                ("breadth", models.IntegerField(blank=True, null=True)),
                ("block", models.TextField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(blank=True, max_length=7)),
                ("is_sold", models.BooleanField(default=False)),
                ("is_in_emi", models.BooleanField(default=False)),
                (
                    "plot_type",
                    models.CharField(
                        choices=[
                            ("Normal", "Normal"),
                            ("Corner", "Corner"),
                            ("Special", "Special"),
                        ],
                        default="Normal",
                        max_length=50,
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="leads.agent",
                    ),
                ),
                (
                    "land",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.kisan",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Typeplot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=100, null=True)),
                ("contact_number", models.IntegerField(blank=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sale_price", models.DecimalField(decimal_places=2, max_digits=15)),
                ("sale_date", models.DateField()),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.userprofile",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.property",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Salary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("base_salary", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "bonus",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "commission",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("payment_date", models.DateField()),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.userprofile",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.property",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="property",
            name="organisation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="leads.userprofile",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="project_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="leads.project",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="related_property",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="leads.property",
            ),
        ),
        migrations.CreateModel(
            name="PlotBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_date", models.DateField()),
                ("name", models.CharField(max_length=100)),
                (
                    "father_husband_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "custom_gender",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("dob", models.DateField()),
                ("mobile_no", models.CharField(max_length=15)),
                ("address", models.TextField()),
                ("bank_name", models.CharField(blank=True, max_length=100, null=True)),
                ("account_no", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.EmailField(max_length=254)),
                (
                    "nominee_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("corner_plot_10", models.BooleanField(default=False)),
                ("corner_plot_5", models.BooleanField(default=False)),
                ("full_pay_discount", models.BooleanField(default=False)),
                ("location", models.CharField(max_length=255)),
                ("associate_detail", models.BooleanField(default=False)),
                (
                    "Plot_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_paidbycust",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("custom", "Custom Payment"),
                            ("installment", "Installments"),
                            ("full", "Full Payment"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "booking_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "mode_of_payment",
                    models.CharField(
                        choices=[
                            ("cheque", "Cheque"),
                            ("rtgs", "RTGS/NEFT"),
                            ("cash", "Cash"),
                        ],
                        max_length=50,
                    ),
                ),
                ("payment_date", models.DateField()),
                ("emi_tenure", models.IntegerField(blank=True, null=True)),
                (
                    "interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "emi_amount",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("remark", models.TextField(blank=True, null=True)),
                (
                    "receipt",
                    models.FileField(blank=True, null=True, upload_to="receipts/"),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plot_bookings",
                        to="leads.agent",
                    ),
                ),
                (
                    "project",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="project",
                        to="leads.property",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=20)),
                ("last_name", models.CharField(max_length=20)),
                ("age", models.IntegerField(default=0)),
                ("description", models.TextField()),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("phone_number", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("converted_date", models.DateTimeField(blank=True, null=True)),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="leads.agent",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads",
                        to="leads.category",
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="leads.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FollowUp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=leads.models.handle_upload_follow_ups,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("postponed", "Postponed"),
                            ("in-Progress", "In-Progress"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "lead",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="followups",
                        to="leads.lead",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EMIPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("due_date", models.DateField()),
                ("emi_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "amount_for_agent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Pending", "Pending"), ("Paid", "Paid")],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                (
                    "plot_booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="emi_payments",
                        to="leads.plotbooking",
                    ),
                ),
            ],
            options={
                "ordering": ["due_date"],
            },
        ),
        migrations.AddField(
            model_name="category",
            name="organisation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="leads.userprofile",
            ),
        ),
        migrations.CreateModel(
            name="Bonus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bonus_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date_awarded", models.DateField()),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BillItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                ("quantity", models.PositiveIntegerField()),
                ("rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("tax", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "total_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "bill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="leads.bill",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="area",
            constraint=models.UniqueConstraint(
                fields=("length", "breadth"), name="unique_length_breadth"
            ),
        ),
        migrations.AddField(
            model_name="agent",
            name="organisation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="leads.userprofile",
            ),
        ),
        migrations.AddField(
            model_name="agent",
            name="parent_agent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_agents",
                to="leads.agent",
            ),
        ),
        migrations.AddField(
            model_name="agent",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
